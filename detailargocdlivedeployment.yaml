apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: '1'
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app.kubernetes.io/instance":"appndejs","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"nodeapp","app.kubernetes.io/version":"1.16.0","helm.sh/chart":"nodeapp-0.1.0"},"name":"appndejs-nodeapp","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app.kubernetes.io/instance":"appndejs","app.kubernetes.io/name":"nodeapp"}},"template":{"metadata":{"labels":{"app.kubernetes.io/instance":"appndejs","app.kubernetes.io/managed-by":"Helm","app.kubernetes.io/name":"nodeapp","app.kubernetes.io/version":"1.16.0","helm.sh/chart":"nodeapp-0.1.0"}},"spec":{"containers":[{"image":"28cloud/nodeaapp:6","imagePullPolicy":"Always","name":"nodeapp","ports":[{"containerPort":3000,"name":"http","protocol":"TCP"}],"resources":{},"securityContext":{}}],"securityContext":{},"serviceAccountName":"appndejs-nodeapp"}}}}
  creationTimestamp: '2024-05-13T10:50:56Z'
  generation: 1
  labels:
    app.kubernetes.io/instance: appndejs
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: nodeapp
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: nodeapp-0.1.0
  name: appndejs-nodeapp
  namespace: default
  resourceVersion: '8617'
  uid: 000d06bc-9ded-4c06-8cc8-a70b9092c925
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/instance: appndejs
      app.kubernetes.io/name: nodeapp
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: appndejs
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: nodeapp
        app.kubernetes.io/version: 1.16.0
        helm.sh/chart: nodeapp-0.1.0
    spec:
      containers:
        - image: '28cloud/nodeaapp:6'
          imagePullPolicy: Always
          name: nodeapp
          ports:
            - containerPort: 3000
              name: http
              protocol: TCP
          resources: {}
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: appndejs-nodeapp
      serviceAccountName: appndejs-nodeapp
      terminationGracePeriodSeconds: 30
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: '2024-05-13T10:51:00Z'
      lastUpdateTime: '2024-05-13T10:51:00Z'
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: 'True'
      type: Available
    - lastTransitionTime: '2024-05-13T10:50:56Z'
      lastUpdateTime: '2024-05-13T10:51:00Z'
      message: ReplicaSet "appndejs-nodeapp-586dbbb78c" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: 'True'
      type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
